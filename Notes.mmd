
- when adding html to a window bring it to front without activating app
- Font +/- buttons are begated next update, probably due to default


# ToDo


- play sound after build

	if($numErrors>0)
	{
		print $output;
		&playSound('Sosumi');
		exit(205);
	}
	else
	{
		#print "$ENV{'TM_FILEPATH'}: OK\n";
		print $asciiOutput;
		&playSound('Ping');
	
		exit(0);
	}

	###############################################################################
	# Subroutines
	###############################################################################
	sub playSound
	{
		my $sf=shift;
	
		my $sp="/System/Library/Sounds/$sf.aiff";
		my $ps="$ENV{'TM_SUPPORT_PATH'}/bin/play";
	
		$ps='/usr/local/bin/playsound' unless(-x $ps);
	
		if(-x $ps && -r $sp)
		{
			system("'$ps' '$sp' 2>/dev/null");
		}
	}
	




# BlitzTalk WebView

- Debugging

	defaults write com.bitart.ApLo WebKitDeveloperExtras -bool true

- Remote Debugging UIWebView
- WebView force redraw by changing font size
- DOMElement stuff
- calling javascript
- adding HTML
- inline JavaScript



# Old code bits

	function getSelectionBoundaryElement(isStart) {
	    var range, sel, container;
	    if (document.selection) {
	        range = document.selection.createRange();
	        range.collapse(isStart);
	        return range.parentElement();
	    } else {
	        sel = window.getSelection();
	        if (sel.getRangeAt) {
	            if (sel.rangeCount > 0) {
	                range = sel.getRangeAt(0);
	            }
	        } else {
	            // Old WebKit
	            range = document.createRange();
	            range.setStart(sel.anchorNode, sel.anchorOffset);
	            range.setEnd(sel.focusNode, sel.focusOffset);

	            // Handle the case when the selection was selected backwards (from the end to the start in the document)
	            if (range.collapsed !== sel.isCollapsed) {
	                range.setStart(sel.focusNode, sel.focusOffset);
	                range.setEnd(sel.anchorNode, sel.anchorOffset);
	            }
	       }

	        if (range) {
	           container = range[isStart ? "startContainer" : "endContainer"];

	           // Check if the container is a text node and return its parent if so
	           return container.nodeType === 3 ? container.parentNode : container;
	        }   
	    }
	}
	